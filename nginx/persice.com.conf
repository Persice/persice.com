upstream bekindred_app_server {
  server unix:/webapps/bekindred/run/gunicorn.sock fail_timeout=0;
}

server {
    listen 80;
    server_name persice.com;
    return         301 https://$server_name$request_uri;
}

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

upstream websocket {
    server 127.0.0.1:8010;
}


### Testing if the client is a mobile or a desktop.
### The selection is based on the usual UA strings for desktop browsers.

## Testing a user agent using a method that reverts the logic of the
## UA detection. Inspired by notnotmobile.appspot.com.
map $http_user_agent $is_desktop {
    default 0;
    ~*linux.*android|windows\s+(?:ce|phone) 0; # exceptions to the rule
    ~*spider|crawl|slurp|bot 1; # bots
    ~*windows|linux|os\s+x\s*[\d\._]+|solaris|bsd 1; # OSes
}

## Revert the logic.
map $is_desktop $is_mobile {
    1 0;
    0 1;
}

set $mobile_rewrite do_not_perform;

if ($is_mobile) {
    set $mobile_rewrite perform;
}

server {
    listen 443 ssl;
    listen 3000 ssl;
    server_name icebrak.com;

    ssl_certificate /etc/nginx/ssl/public.crt;
    ssl_certificate_key /etc/nginx/ssl/persice.key;

    ssl_protocols  SSLv2 SSLv3 TLSv1;
    ssl_ciphers  ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP;
    ssl_prefer_server_ciphers   on;
    client_max_body_size 4G;

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types image/png image/gif image/jpeg application/javascript text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    access_log /webapps/bekindred/logs/nginx-access.log;

    error_log /webapps/bekindred/logs/nginx-error.log;

    location /socket.io/ {
        proxy_pass http://websocket;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;
        proxy_read_timeout 1000;
    }
    location /static/ {
        alias   /webapps/bekindred/staticfiles/;
    }

    location /media/ {
        alias   /webapps/bekindred/beKindred.com/bekindred/media/;
    }

    location /assets/ {
        alias    /webapps/bekindred/persice_app/dist/assets/;
        access_log   off;
        add_header Access-Control-Allow-Origin *;
        expires      30d;
    }

    location /api/ {
        proxy_pass http://bekindred_app_server;
    }

    location /admin/ {
        proxy_pass http://bekindred_app_server;
    }

    location / {

        set $mobile_rewrite do_not_perform;

        if ($is_mobile) {
            set $mobile_rewrite perform;
        }

        if ($mobile_rewrite = perform) {
            root   /webapps/bekindred/persice_app/dist/;
            index  index_mobile.html;
            break;
        }

        root   /webapps/bekindred/persice_app/dist/;
        index  index.html index.htm;

        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Host $http_host;

        proxy_redirect off;

        if ($http_origin ~* (https?://.*\.mckinsey\.com(:[0-9]+)?)) {
            set $cors "true";
        }

        if ($request_method = 'OPTIONS') {
            set $cors "${cors}options";
        }

        # non-OPTIONS indicates a normal CORS request
        if ($request_method = 'GET') {
            set $cors "${cors}get";
        }
        if ($request_method = 'POST') {
            set $cors "${cors}post";
        }

        # if it's a GET or POST, set the standard CORS responses header
        if ($cors = "trueget") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
        }

        if ($cors = "truepost") {
            # Tells the browser this origin may make cross-origin requests
            # (Here, we echo the requesting origin, which matched the whitelist.)
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            # Tells the browser it may show the response, when XmlHttpRequest.withCredentials=true.
            add_header 'Access-Control-Allow-Credentials' 'true';
            # # Tell the browser which response headers the JS can see
            # add_header 'Access-Control-Expose-Headers' 'myresponseheader';
        }

        # if it's OPTIONS, for a CORS preflight request, then respond immediately with no response body
        if ($cors = "trueoptions") {
            add_header 'Access-Control-Allow-Origin' "$http_origin";
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Authorization,Content-Type,Accept,Origin,User-Agent,DNT,Cache-Control,X-Mx-ReqToken,Keep-Alive,X-Requested-With,If-Modified-Since';
            # build entire response to the preflight request
            # no body in this response
            add_header 'Content-Length' 0;
            # (should not be necessary, but included for non-conforming browsers)
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            # indicate successful return with no content
            return 204;
        }
    }

    # Error pages
    error_page 500 502 503 504 /500.html;
    location = /500.html {
        root /webapps/bekindred/beKindred.com/bekindred/static/;
    }
}

