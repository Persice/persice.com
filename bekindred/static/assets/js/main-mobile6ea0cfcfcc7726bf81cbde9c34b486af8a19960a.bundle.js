webpackJsonp([3],[
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	eval("\"use strict\";\n/*\n * Providers provided by Angular\n */\nvar platform_browser_dynamic_1 = __webpack_require__(317);\nvar browser_1 = __webpack_require__(570);\nvar environment_1 = __webpack_require__(571);\nvar store_1 = __webpack_require__(44);\nvar reducers_1 = __webpack_require__(64);\nvar actions_1 = __webpack_require__(41);\nvar app_mobile_1 = __webpack_require__(500);\n/*\n * Platform and Environment\n * our providers/directives/pipes\n */\n/**\n * RxJS Redux store and reducers\n */\n/*\n * App Component\n * our top level component that holds all of our components\n */\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nfunction main(initialHmrState) {\n    return platform_browser_dynamic_1.bootstrap(app_mobile_1.AppMobileComponent, browser_1.PLATFORM_PROVIDERS_MAIN_MOBILE.concat(environment_1.ENV_PROVIDERS, app_mobile_1.APP_PROVIDERS, [\n        store_1.provideStore(reducers_1.default),\n        actions_1.default\n    ]))\n        .catch(function (err) { return console.error(err); });\n}\nexports.main = main;\n/*\n * Vendors\n * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n * You can also import them in vendors to ensure that they are bundled in one file\n * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n */\n/*\n * Hot Module Reload\n * experimental version\n */\nif (false) {\n    // activate hot module reload\n    var ngHmr = require('angular2-hmr');\n    ngHmr.hotModuleReplacement(main, module);\n    // fix for closing remodal after hot reload\n    jQuery('.remodal-overlay').remove();\n    jQuery('.remodal-wrapper').remove();\n}\nelse {\n    // bootstrap when documetn is ready\n    document.addEventListener('DOMContentLoaded', function () { return main(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main-mobile.browser.ts\n ** module id = 0\n ** module chunks = 3\n **/\n//# sourceURL=webpack:///./src/main-mobile.browser.ts?");

/***/ }
]);