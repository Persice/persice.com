{"version":3,"sources":["webpack:///main-mobile.905e4e45521a56b01cf0173d0990a20aab59dd84.prod.bundle.js","webpack:///./src/main-mobile.browser.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","main","initialHmrState","platform_browser_dynamic_1","bootstrap","app_mobile_1","AppMobileComponent","browser_1","PLATFORM_PROVIDERS_MAIN_MOBILE","concat","environment_1","ENV_PROVIDERS","APP_PROVIDERS","store_1","provideStore","reducers_1","default","actions_1","catch","err","console","error","document","addEventListener"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,GCFhC,YA0BA,SAAAC,GAAAC,GACA,MAAAC,GAAAC,UAAAC,EAAAC,mBAAAC,EAAAC,+BAAAC,OAAAC,EAAAC,cAAAN,EAAAO,eACAC,EAAAC,aAAAC,EAAAC,SACAC,EAAAD,WAEAE,MAAA,SAAAC,GAA+B,MAAAC,SAAAC,MAAAF,KA3B/B,GAAAhB,GAAAH,EAAA,KAKAO,EAAAP,EAAA,KACAU,EAAAV,EAAA,KAIAa,EAAAb,EAAA,IACAe,EAAAf,EAAA,IACAiB,EAAAjB,EAAA,IAKAK,EAAAL,EAAA,IAYAD,GAAAE,MAqBAqB,UAAAC,iBAAA,8BAA+D,MAAAtB","file":"main-mobile.905e4e45521a56b01cf0173d0990a20aab59dd84.prod.bundle.js","sourcesContent":["webpackJsonp([5],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t * Providers provided by Angular\n\t */\n\tvar platform_browser_dynamic_1 = __webpack_require__(153);\n\t/*\n\t* Platform and Environment\n\t* our providers/directives/pipes\n\t*/\n\tvar browser_1 = __webpack_require__(222);\n\tvar environment_1 = __webpack_require__(223);\n\t/**\n\t * RxJS Redux store and reducers\n\t */\n\tvar store_1 = __webpack_require__(44);\n\tvar reducers_1 = __webpack_require__(70);\n\tvar actions_1 = __webpack_require__(40);\n\t/*\n\t* App Component\n\t* our top level component that holds all of our components\n\t*/\n\tvar app_mobile_1 = __webpack_require__(503);\n\t/*\n\t * Bootstrap our Angular app with a top level component `App` and inject\n\t * our Services and Providers into Angular's dependency injection\n\t */\n\tfunction main(initialHmrState) {\n\t    return platform_browser_dynamic_1.bootstrap(app_mobile_1.AppMobileComponent, browser_1.PLATFORM_PROVIDERS_MAIN_MOBILE.concat(environment_1.ENV_PROVIDERS, app_mobile_1.APP_PROVIDERS, [\n\t        store_1.provideStore(reducers_1.default),\n\t        actions_1.default\n\t    ]))\n\t        .catch(function (err) { return console.error(err); });\n\t}\n\texports.main = main;\n\t/*\n\t * Vendors\n\t * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n\t * You can also import them in vendors to ensure that they are bundled in one file\n\t * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n\t */\n\t/*\n\t * Hot Module Reload\n\t * experimental version\n\t */\n\tif (false) {\n\t    // activate hot module reload\n\t    var ngHmr = require('angular2-hmr');\n\t    ngHmr.hotModuleReplacement(main, module);\n\t    // fix for closing remodal after hot reload\n\t    jQuery('.remodal-overlay').remove();\n\t    jQuery('.remodal-wrapper').remove();\n\t}\n\telse {\n\t    // bootstrap when documetn is ready\n\t    document.addEventListener('DOMContentLoaded', function () { return main(); });\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** main-mobile.905e4e45521a56b01cf0173d0990a20aab59dd84.prod.bundle.js\n **/","\"use strict\";\n/*\n * Providers provided by Angular\n */\nvar platform_browser_dynamic_1 = require('@angular/platform-browser-dynamic');\n/*\n* Platform and Environment\n* our providers/directives/pipes\n*/\nvar browser_1 = require('./platform/browser');\nvar environment_1 = require('./platform/environment');\n/**\n * RxJS Redux store and reducers\n */\nvar store_1 = require('@ngrx/store');\nvar reducers_1 = require('./common/reducers');\nvar actions_1 = require('./common/actions');\n/*\n* App Component\n* our top level component that holds all of our components\n*/\nvar app_mobile_1 = require('./app-mobile');\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nfunction main(initialHmrState) {\n    return platform_browser_dynamic_1.bootstrap(app_mobile_1.AppMobileComponent, browser_1.PLATFORM_PROVIDERS_MAIN_MOBILE.concat(environment_1.ENV_PROVIDERS, app_mobile_1.APP_PROVIDERS, [\n        store_1.provideStore(reducers_1.default),\n        actions_1.default\n    ]))\n        .catch(function (err) { return console.error(err); });\n}\nexports.main = main;\n/*\n * Vendors\n * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n * You can also import them in vendors to ensure that they are bundled in one file\n * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n */\n/*\n * Hot Module Reload\n * experimental version\n */\nif ('development' === ENV && HMR === true) {\n    // activate hot module reload\n    var ngHmr = require('angular2-hmr');\n    ngHmr.hotModuleReplacement(main, module);\n    // fix for closing remodal after hot reload\n    jQuery('.remodal-overlay').remove();\n    jQuery('.remodal-wrapper').remove();\n}\nelse {\n    // bootstrap when documetn is ready\n    document.addEventListener('DOMContentLoaded', function () { return main(); });\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/main-mobile.browser.ts\n ** module id = 0\n ** module chunks = 5\n **/"],"sourceRoot":""}