{"version":3,"sources":["webpack:///2.d21d91f4275badd917d7.chunk.js","webpack:///./src/app/messages/conversation-input/conversation-input.component.ts","webpack:///./src/app/messages/conversation-input/index.ts","webpack:///./src/app/messages/conversation/conversation-header.component.ts","webpack:///./src/app/messages/conversation/conversation-header.html","webpack:///./src/app/messages/conversation/conversation.component.ts","webpack:///./src/app/messages/conversation/index.ts","webpack:///./src/app/messages/conversations/conversations-header.component.ts","webpack:///./src/app/messages/conversations/conversations.component.ts","webpack:///./src/app/messages/conversations/index.ts","webpack:///./src/app/messages/index.ts","webpack:///./src/app/messages/messages.component.ts","webpack:///./src/app/messages/messages.html","webpack:///./src/app/messages/new-conversation/index.ts","webpack:///./src/app/messages/new-conversation/new-conversation-header.component.ts","webpack:///./src/app/messages/new-conversation/new-conversation-header.html","webpack:///./src/app/messages/new-conversation/new-conversation.component.ts","webpack:///./src/app/messages/new-conversation/new-conversation.html","webpack:///./src/app/messages/new-conversation/search-connections.component.ts","webpack:///./src/app/messages/new-conversation/search-connections.html","webpack:///./src/app/shared/components/messages-list/index.ts","webpack:///./src/app/shared/components/messages-list/message.component.ts","webpack:///./src/app/shared/components/messages-list/messages-list.component.ts","webpack:///./src/app/shared/components/thread-list/index.ts","webpack:///./src/app/shared/components/thread-list/thread-list.component.ts","webpack:///./src/app/shared/components/thread-list/thread.component.ts"],"names":["webpackJsonp","1274","module","exports","__webpack_require__","core_1","ConversationInputComponent","this","newMessage","EventEmitter","message","prototype","sendMessage","event","length","disabled","next","__decorate","Output","__metadata","Input","Object","Component","selector","template","1248","__export","m","p","hasOwnProperty","1275","directives_1","ConversationHeaderComponent","directives","DropdownDirective","1302","1276","router_1","services_1","messages_list_1","conversation_input_1","conversation_header_component_1","loading_1","ConversationComponent","_params","inboxService","messagesService","userService","messagesCounterService","websocketService","_router","name","messages","loadingMessages","loadingMessagesFinished","isMessagesEmpty","messagesNext","hasNew","scrollOffset","threadId","get","ngOnInit","_this","url","channel","findByUri","subscribe","data","first_name","unsubscribe","err","console","log","select","setTimeout","refreshCounter","messagesServiceInstance","serviceObserver","res","loading","finished","isEmpty","prevCount","total","initialLoadingFinished","parent","navigate","friendId","elem_1","jQuery","scrollTop","scrollHeight","elem_2","elem_3","bind","handleScrollEvent","unbind","startLoadingMessages","websocketServiceInstance","on","sender","recievedMessage","elem","loadMore","send","ngOnDestroy","MessagesListComponent","LoadingComponent","providers","MessagesService","UserAuthService","RouteParams","InboxService","MessagesCounterService","WebsocketService","Router","1277","1278","ConversationsHeaderComponent","inboxServiceObserver","serviceCounterObserver","counter","ROUTER_DIRECTIVES","1279","thread_list_1","ConversationsComponent","element","selected","threads","loadingInbox","loadingInboxFinished","isInboxEmpty","inboxNext","activeThread","inboxServiceInstance","startLoadingInbox","markRead","addSender","friend_id","onSelect","thread","threshold","document","height","ThreadListComponent","ElementRef","1280","597","1281","conversations_1","conversation_1","new_conversation_1","MessagesComponent","body","documentElement","navigateToConversation","id","RouteConfig","path","component","NewConversationComponent","useAsDefault","1303","1282","1283","lodash_1","search_connections_component_1","TOKEN_LIMIT","NewConversationHeaderComponent","tokens","searchInputVisible","activeToken","ngOnChanges","values","initialTokens","currentValue","addToken","token","i","findIndex","concat","emit","removeToken","index","splice","SearchConnectionsComponent","1304","1284","new_conversation_header_component_1","uri","channel_1","findOneByUri","image","channel_2","sendNew","error","routerOnActivate","nextInstruction","prevInstruction","deselectThreads","1305","1285","common_1","http_1","http","searchTerm","Control","resultsVisible","selectedIndex","resultsCount","resultsCache","results","_search","valueChanges","keyEvent","keyCode","container","scrollTo","offset","top","preventDefault","result","updateValue","terms","debounceDuration","debounceTime","distinctUntilChanged","switchMap","term","_rawSearch","map","request","json","objects","meta","total_count","CheckImageDirective","Http","1306","1286","1287","MessageComponent","openProfile","username","changeDetection","ChangeDetectionStrategy","OnPush","1288","message_component_1","1289","1290","thread_component_1","ThreadComponent","1291","isActive"],"mappings":"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","file":"2.d21d91f4275badd917d7.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1274:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar ConversationInputComponent = (function () {\r\n\t    function ConversationInputComponent() {\r\n\t        this.newMessage = new core_1.EventEmitter();\r\n\t        this.message = '';\r\n\t    }\r\n\t    ConversationInputComponent.prototype.sendMessage = function (event) {\r\n\t        if (this.message.length > 0 && !this.disabled) {\r\n\t            this.newMessage.next(this.message);\r\n\t            this.message = '';\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], ConversationInputComponent.prototype, \"newMessage\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ConversationInputComponent.prototype, \"disabled\", void 0);\r\n\t    ConversationInputComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-send-message',\r\n\t            template: \"\\n  <div class=\\\"chat__send-message\\\">\\n    <div class=\\\"tableize\\\">\\n      <div class=\\\"tableize__cell tableize__cell--fill\\\">\\n        <div class=\\\"tableize__content\\\">\\n          <textarea [(ngModel)]=\\\"message\\\" class=\\\"c-input c-input--large\\\" placeholder=\\\"Write a message\\\"></textarea>\\n        </div>\\n      </div>\\n      <div class=\\\"tableize__cell\\\">\\n        <div class=\\\"tableize__content chat__send-message__has-btn\\\">\\n          <a (click)=\\\"sendMessage($event)\\\" class=\\\"btn btn-1 btn-1--full btn-1--filled btn-1--blue \\\">Send</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \"\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ConversationInputComponent);\r\n\t    return ConversationInputComponent;\r\n\t}());\r\n\texports.ConversationInputComponent = ConversationInputComponent;\r\n\n\n/***/ },\n\n/***/ 1248:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1274));\r\n\n\n/***/ },\n\n/***/ 1275:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar directives_1 = __webpack_require__(28);\r\n\tvar ConversationHeaderComponent = (function () {\r\n\t    function ConversationHeaderComponent() {\r\n\t    }\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ConversationHeaderComponent.prototype, \"name\", void 0);\r\n\t    ConversationHeaderComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-conversation-header',\r\n\t            directives: [\r\n\t                directives_1.DropdownDirective\r\n\t            ],\r\n\t            template: __webpack_require__(1302)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ConversationHeaderComponent);\r\n\t    return ConversationHeaderComponent;\r\n\t}());\r\n\texports.ConversationHeaderComponent = ConversationHeaderComponent;\r\n\n\n/***/ },\n\n/***/ 1302:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header class=\\\"chat-header\\\">\\n  <div class=\\\"layout layout--middle\\\" *ngIf=\\\"name !== ''\\\">\\n    <div class=\\\"layout__item 3/4\\\">\\n      <div class=\\\"has-input-left-labeled has-input-left-labeled--big\\\">\\n        <label class=\\\"left-labeled-label is-hidden\\\" for=\\\"\\\">To:</label>\\n        <div class=\\\"left-labeled-input\\\">\\n          <input type=\\\"text\\\" class=\\\"left-labeled-input is-hidden\\\" placeholder=\\\"NAME\\\">\\n          <span class=\\\"left-labeled-value\\\">{{name}}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"layout__item 1/4 text-right\\\">\\n      <div class=\\\"has-dropdown-basic\\\">\\n        <a class=\\\"btn btn-1 btn-1--red btn--icon-circle-small js-share mr\\\" dropdown=\\\"#messagesDropdown\\\">\\n          <svg role=\\\"img\\\" class=\\\"icon icon--tiny\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"/static/assets/icons/icons.svg#icon-more\\\"></use>\\n          </svg>\\n        </a>\\n        <div class=\\\"dropdown-basic dropdown-basic--medium dropdown-basic--arrow-right\\\" id=\\\"messagesDropdown\\\">\\n          <ul class=\\\"list-bare\\\">\\n            <li><a>Delete conversation</a></li>\\n            <li><a>Report spam</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</header>\\n\"\n\n/***/ },\n\n/***/ 1276:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(22);\r\n\tvar services_1 = __webpack_require__(12);\r\n\tvar messages_list_1 = __webpack_require__(1286);\r\n\tvar conversation_input_1 = __webpack_require__(1248);\r\n\tvar conversation_header_component_1 = __webpack_require__(1275);\r\n\tvar loading_1 = __webpack_require__(24);\r\n\tvar ConversationComponent = (function () {\r\n\t    function ConversationComponent(_params, inboxService, messagesService, userService, messagesCounterService, websocketService, _router) {\r\n\t        this._params = _params;\r\n\t        this.inboxService = inboxService;\r\n\t        this.messagesService = messagesService;\r\n\t        this.userService = userService;\r\n\t        this.messagesCounterService = messagesCounterService;\r\n\t        this.websocketService = websocketService;\r\n\t        this._router = _router;\r\n\t        this.name = '';\r\n\t        this.messages = [];\r\n\t        this.loadingMessages = false;\r\n\t        this.loadingMessagesFinished = false;\r\n\t        this.isMessagesEmpty = false;\r\n\t        this.messagesNext = '';\r\n\t        this.hasNew = false;\r\n\t        this.scrollOffset = null;\r\n\t        this.threadId = this._params.get('threadId');\r\n\t    }\r\n\t    ConversationComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        var url = \"/api/v1/auth/user/\" + this.threadId + \"/\";\r\n\t        var channel = this.userService.findByUri(url)\r\n\t            .subscribe(function (data) {\r\n\t            _this.name = data.first_name;\r\n\t            channel.unsubscribe();\r\n\t        }, function (err) { return console.log('User could not be loaded'); });\r\n\t        this.inboxService.select(this.threadId);\r\n\t        setTimeout(function () {\r\n\t            _this.messagesCounterService.refreshCounter();\r\n\t        }, 500);\r\n\t        //subscribe to messages service updates\r\n\t        this.messagesServiceInstance = this.messagesService.serviceObserver()\r\n\t            .subscribe(function (res) {\r\n\t            _this.loadingMessages = res.loading;\r\n\t            _this.loadingMessagesFinished = res.finished;\r\n\t            _this.isMessagesEmpty = res.isEmpty;\r\n\t            _this.messagesNext = res.next;\r\n\t            _this.hasNew = res.hasNew;\r\n\t            // this.name = res.name;\r\n\t            var prevCount = _this.messages.length;\r\n\t            if (res.total === 0 && res.initialLoadingFinished) {\r\n\t                _this._router.parent.navigate(['/Messages', 'ConversationNewSelected', { friendId: _this.threadId }]);\r\n\t            }\r\n\t            //when first loading messages, scroll to bottom\r\n\t            // after initial messages have been rendered\r\n\t            if (prevCount === 0 && !_this.loadingMessages) {\r\n\t                var elem_1 = jQuery('#messages')[0];\r\n\t                setTimeout(function () {\r\n\t                    elem_1.scrollTop = elem_1.scrollHeight;\r\n\t                });\r\n\t            }\r\n\t            //if receieved new message scroll to bottom\r\n\t            if (_this.hasNew && !_this.loadingMessages) {\r\n\t                var elem_2 = jQuery('#messages')[0];\r\n\t                setTimeout(function () {\r\n\t                    elem_2.scrollTop = elem_2.scrollHeight;\r\n\t                });\r\n\t                _this.hasNew = false;\r\n\t            }\r\n\t            _this.messages = res.data;\r\n\t            //when loading more messages finishes, scroll to bottom\r\n\t            // after new messages have been rendered\r\n\t            if (prevCount > 0 && !_this.loadingMessages && _this.scrollOffset !== null) {\r\n\t                var elem_3 = jQuery('#messages')[0];\r\n\t                setTimeout(function () {\r\n\t                    elem_3.scrollTop = elem_3.scrollHeight - _this.scrollOffset;\r\n\t                    _this.scrollOffset = null;\r\n\t                });\r\n\t            }\r\n\t            if (_this.loadingMessagesFinished === false) {\r\n\t                jQuery('#messages').bind('scroll', _this.handleScrollEvent.bind(_this));\r\n\t            }\r\n\t            else {\r\n\t                jQuery('#messages').unbind('scroll');\r\n\t            }\r\n\t        });\r\n\t        //start loading messages\r\n\t        this.messagesService.startLoadingMessages(this.threadId);\r\n\t        //subscribe to webscoket service updates\r\n\t        this.websocketServiceInstance = this.websocketService.on('messages:new').subscribe(function (data) {\r\n\t            if (data.sender === \"/api/v1/auth/user/\" + _this.threadId + \"/\") {\r\n\t                _this.messagesService.recievedMessage(data);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    ConversationComponent.prototype.handleScrollEvent = function (event) {\r\n\t        //reverse scroll\r\n\t        var elem = jQuery('#messages')[0];\r\n\t        if (this.messagesNext && elem.scrollTop <= 50) {\r\n\t            if (!this.loadingMessages && !this.hasNew) {\r\n\t                this.scrollOffset = elem.scrollHeight;\r\n\t                this.messagesService.loadMore(this.threadId);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ConversationComponent.prototype.sendMessage = function (message) {\r\n\t        this.messagesService.send(this.threadId, message);\r\n\t    };\r\n\t    ConversationComponent.prototype.ngOnDestroy = function () {\r\n\t        if (this.messagesServiceInstance) {\r\n\t            this.messagesServiceInstance.unsubscribe();\r\n\t        }\r\n\t        if (this.websocketServiceInstance) {\r\n\t            this.websocketServiceInstance.unsubscribe();\r\n\t        }\r\n\t    };\r\n\t    ConversationComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-conversation',\r\n\t            directives: [\r\n\t                conversation_header_component_1.ConversationHeaderComponent,\r\n\t                messages_list_1.MessagesListComponent,\r\n\t                conversation_input_1.ConversationInputComponent,\r\n\t                loading_1.LoadingComponent\r\n\t            ],\r\n\t            providers: [\r\n\t                services_1.MessagesService,\r\n\t                services_1.UserAuthService\r\n\t            ],\r\n\t            template: \"\\n  <prs-conversation-header [name]=\\\"name\\\"></prs-conversation-header>\\n  <div class=\\\"chat\\\">\\n    <div class=\\\"chat-wrapper\\\" id=\\\"messages\\\">\\n      <div class=\\\"chat__messages-wrapper\\\">\\n        <div class=\\\"chat__messages\\\">\\n          <prs-loading [status]=\\\"loadingMessages\\\"></prs-loading>\\n          <prs-message-list [messages]=\\\"messages\\\"></prs-message-list>\\n        </div>\\n      </div>\\n    </div>\\n    <prs-send-message [disabled]=\\\"0\\\" (newMessage)=\\\"sendMessage($event)\\\"></prs-send-message>\\n  </div>\\n  \"\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_1.RouteParams, services_1.InboxService, services_1.MessagesService, services_1.UserAuthService, services_1.MessagesCounterService, services_1.WebsocketService, router_1.Router])\r\n\t    ], ConversationComponent);\r\n\t    return ConversationComponent;\r\n\t}());\r\n\texports.ConversationComponent = ConversationComponent;\r\n\n\n/***/ },\n\n/***/ 1277:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1276));\r\n\n\n/***/ },\n\n/***/ 1278:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(22);\r\n\tvar services_1 = __webpack_require__(12);\r\n\tvar ConversationsHeaderComponent = (function () {\r\n\t    function ConversationsHeaderComponent(inboxService) {\r\n\t        var _this = this;\r\n\t        this.inboxService = inboxService;\r\n\t        this.inboxServiceObserver = this.inboxService.serviceCounterObserver()\r\n\t            .subscribe(function (data) {\r\n\t            _this.counter = data;\r\n\t        });\r\n\t    }\r\n\t    ConversationsHeaderComponent.prototype.ngOnDestroy = function () {\r\n\t        this.inboxServiceObserver.unsubscribe();\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ConversationsHeaderComponent.prototype, \"counter\", void 0);\r\n\t    ConversationsHeaderComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-conversations-header',\r\n\t            directives: [\r\n\t                router_1.ROUTER_DIRECTIVES\r\n\t            ],\r\n\t            template: \"\\n  <header class=\\\"chat-sidebar-header\\\">\\n    <div class=\\\"layout layout--middle\\\">\\n      <div class=\\\"layout__item 3/4\\\">\\n        <h3 class=\\\"chat-sidebar-header__title\\\">Conversation <span class=\\\"chat-sidebar-header__title__value\\\">({{counter}})</span></h3>\\n      </div>\\n      <div class=\\\"layout__item 1/4 text-right\\\">\\n        <a [routerLink]=\\\"['/Messages']\\\" class=\\\"btn btn-1 btn-1--blue btn--icon-circle-small js-share mr-\\\">\\n          <svg role=\\\"img\\\" class=\\\"icon icon--tiny\\\">\\n            <use xlink:href=\\\"/static/assets/icons/icons.svg#icon-new-message\\\"></use>\\n          </svg>\\n        </a>\\n      </div>\\n    </div>\\n  </header>\\n  \"\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [services_1.InboxService])\r\n\t    ], ConversationsHeaderComponent);\r\n\t    return ConversationsHeaderComponent;\r\n\t}());\r\n\texports.ConversationsHeaderComponent = ConversationsHeaderComponent;\r\n\n\n/***/ },\n\n/***/ 1279:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar services_1 = __webpack_require__(12);\r\n\tvar thread_list_1 = __webpack_require__(1289);\r\n\tvar loading_1 = __webpack_require__(24);\r\n\tvar ConversationsComponent = (function () {\r\n\t    function ConversationsComponent(inboxService, messagesCounterService, websocketService, element) {\r\n\t        this.inboxService = inboxService;\r\n\t        this.messagesCounterService = messagesCounterService;\r\n\t        this.websocketService = websocketService;\r\n\t        this.element = element;\r\n\t        this.selected = new core_1.EventEmitter();\r\n\t        this.threads = [];\r\n\t        this.loadingInbox = false;\r\n\t        this.loadingInboxFinished = false;\r\n\t        this.isInboxEmpty = false;\r\n\t        this.inboxNext = '';\r\n\t        this.activeThread = null;\r\n\t    }\r\n\t    ConversationsComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        setTimeout(function () {\r\n\t            _this.messagesCounterService.refreshCounter();\r\n\t        }, 500);\r\n\t        //subscribe to inbox service updates\r\n\t        this.inboxServiceInstance = this.inboxService.serviceObserver()\r\n\t            .subscribe(function (res) {\r\n\t            _this.loadingInbox = res.loading;\r\n\t            _this.threads = res.data;\r\n\t            _this.loadingInboxFinished = res.finished;\r\n\t            _this.isInboxEmpty = res.isEmpty;\r\n\t            _this.inboxNext = res.next;\r\n\t            _this.activeThread = res.selected;\r\n\t            if (_this.loadingInboxFinished === false) {\r\n\t                jQuery('#inbox').bind('scroll', _this.handleScrollEvent.bind(_this));\r\n\t            }\r\n\t            else {\r\n\t                jQuery('#inbox').unbind('scroll');\r\n\t            }\r\n\t        });\r\n\t        //start loading inbox\r\n\t        this.inboxService.startLoadingInbox();\r\n\t        this.websocketServiceInstance = this.websocketService.on('messages:new').subscribe(function (data) {\r\n\t            if (_this.activeThread !== null) {\r\n\t                _this.inboxService.markRead(_this.activeThread);\r\n\t            }\r\n\t            setTimeout(function () {\r\n\t                _this.inboxService.addSender(data.friend_id);\r\n\t                _this.messagesCounterService.refreshCounter();\r\n\t            }, 500);\r\n\t        });\r\n\t    };\r\n\t    ConversationsComponent.prototype.onSelect = function (thread) {\r\n\t        this.inboxService.select(thread.threadId);\r\n\t        this.selected.next(thread.threadId);\r\n\t    };\r\n\t    ConversationsComponent.prototype.handleScrollEvent = function (event) {\r\n\t        var scrollOffset = jQuery('#inbox').scrollTop();\r\n\t        var threshold = jQuery(document).height() - jQuery('#inbox').height() - 60;\r\n\t        if (this.inboxNext && scrollOffset > threshold) {\r\n\t            if (!this.loadingInbox) {\r\n\t                this.inboxService.loadMore();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    ConversationsComponent.prototype.ngOnDestroy = function () {\r\n\t        if (this.inboxServiceInstance) {\r\n\t            this.inboxServiceInstance.unsubscribe();\r\n\t        }\r\n\t        if (this.websocketServiceInstance) {\r\n\t            this.websocketServiceInstance.unsubscribe();\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], ConversationsComponent.prototype, \"selected\", void 0);\r\n\t    ConversationsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-conversations',\r\n\t            directives: [\r\n\t                thread_list_1.ThreadListComponent,\r\n\t                loading_1.LoadingComponent\r\n\t            ],\r\n\t            template: \"\\n    <aside class=\\\"chat-sidebar is-scrollable-y\\\" id=\\\"inbox\\\" (selected)=\\\"navigateToConversation($event)\\\">\\n      <prs-thread-list (selected)=\\\"onSelect($event)\\\" [active]=\\\"activeThread\\\" [threads]=\\\"threads\\\"></prs-thread-list>\\n      <prs-loading [status]=\\\"loadingInbox\\\"></prs-loading>\\n    </aside>\\n  \"\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [services_1.InboxService, services_1.MessagesCounterService, services_1.WebsocketService, core_1.ElementRef])\r\n\t    ], ConversationsComponent);\r\n\t    return ConversationsComponent;\r\n\t}());\r\n\texports.ConversationsComponent = ConversationsComponent;\r\n\n\n/***/ },\n\n/***/ 1280:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1278));\r\n\t__export(__webpack_require__(1279));\r\n\n\n/***/ },\n\n/***/ 597:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1281));\r\n\n\n/***/ },\n\n/***/ 1281:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(22);\r\n\tvar services_1 = __webpack_require__(12);\r\n\tvar conversations_1 = __webpack_require__(1280);\r\n\tvar conversation_1 = __webpack_require__(1277);\r\n\tvar new_conversation_1 = __webpack_require__(1282);\r\n\tvar MessagesComponent = (function () {\r\n\t    function MessagesComponent(inboxService, _router) {\r\n\t        this.inboxService = inboxService;\r\n\t        this._router = _router;\r\n\t        this.counter = 0;\r\n\t    }\r\n\t    MessagesComponent.prototype.ngOnInit = function () {\r\n\t        document.body.scrollTop = document.documentElement.scrollTop = 0;\r\n\t    };\r\n\t    MessagesComponent.prototype.navigateToConversation = function (id) {\r\n\t        this._router.navigate(['SingleConversation', { threadId: id }]);\r\n\t    };\r\n\t    MessagesComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-messages',\r\n\t            template: __webpack_require__(1303),\r\n\t            directives: [\r\n\t                conversations_1.ConversationsComponent,\r\n\t                conversations_1.ConversationsHeaderComponent,\r\n\t                router_1.ROUTER_DIRECTIVES\r\n\t            ],\r\n\t            providers: [\r\n\t                services_1.InboxService\r\n\t            ]\r\n\t        }),\r\n\t        router_1.RouteConfig([\r\n\t            {\r\n\t                path: '/:threadId',\r\n\t                component: conversation_1.ConversationComponent,\r\n\t                name: 'SingleConversation'\r\n\t            },\r\n\t            {\r\n\t                path: '/new/',\r\n\t                component: new_conversation_1.NewConversationComponent,\r\n\t                name: 'ConversationNew',\r\n\t                useAsDefault: true\r\n\t            },\r\n\t            {\r\n\t                path: '/new/:friendId',\r\n\t                component: new_conversation_1.NewConversationComponent,\r\n\t                name: 'ConversationNewSelected',\r\n\t            }\r\n\t        ]), \r\n\t        __metadata('design:paramtypes', [services_1.InboxService, router_1.Router])\r\n\t    ], MessagesComponent);\r\n\t    return MessagesComponent;\r\n\t}());\r\n\texports.MessagesComponent = MessagesComponent;\r\n\n\n/***/ },\n\n/***/ 1303:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"layout layout--flush position-relative\\\">\\n  <div class=\\\"layout__item extralarge-and-up-3/10 4/10\\\">\\n    <prs-conversations-header [counter]=\\\"counter\\\"></prs-conversations-header>\\n    <prs-conversations (selected)=\\\"navigateToConversation($event)\\\"></prs-conversations>\\n  </div>\\n  <div class=\\\"layout__item extralarge-and-up-7/10 6/10\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 1282:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1284));\r\n\n\n/***/ },\n\n/***/ 1283:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar lodash_1 = __webpack_require__(23);\r\n\tvar search_connections_component_1 = __webpack_require__(1285);\r\n\tvar TOKEN_LIMIT = 1;\r\n\tvar NewConversationHeaderComponent = (function () {\r\n\t    function NewConversationHeaderComponent() {\r\n\t        this.selected = new core_1.EventEmitter;\r\n\t        this.tokens = [];\r\n\t        this.searchInputVisible = true;\r\n\t        this.activeToken = -1;\r\n\t    }\r\n\t    NewConversationHeaderComponent.prototype.ngOnChanges = function (values) {\r\n\t        if (values.initialTokens && values.initialTokens.currentValue[0]) {\r\n\t            //add initial token;\r\n\t            this.addToken(values.initialTokens.currentValue[0]);\r\n\t        }\r\n\t    };\r\n\t    NewConversationHeaderComponent.prototype.addToken = function (token) {\r\n\t        //check if limit is reached\r\n\t        if (this.tokens.length < TOKEN_LIMIT) {\r\n\t            //check if token already exists\r\n\t            var i = lodash_1.findIndex(this.tokens, { friend_id: token.friend_id });\r\n\t            if (i === -1) {\r\n\t                this.tokens = this.tokens.concat([token]);\r\n\t                this.activeToken = -1;\r\n\t                this.selected.emit(this.tokens);\r\n\t            }\r\n\t            else {\r\n\t                this.activeToken = i;\r\n\t            }\r\n\t            //if token limit reached, hide search input\r\n\t            if (this.tokens.length === TOKEN_LIMIT) {\r\n\t                this.searchInputVisible = false;\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    NewConversationHeaderComponent.prototype.removeToken = function (index) {\r\n\t        this.activeToken = -1;\r\n\t        this.tokens.splice(index, 1);\r\n\t        this.selected.emit(this.tokens);\r\n\t        this.searchInputVisible = true;\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], NewConversationHeaderComponent.prototype, \"selected\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], NewConversationHeaderComponent.prototype, \"initialTokens\", void 0);\r\n\t    NewConversationHeaderComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-new-conversation-header',\r\n\t            directives: [\r\n\t                search_connections_component_1.SearchConnectionsComponent\r\n\t            ],\r\n\t            template: __webpack_require__(1304)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], NewConversationHeaderComponent);\r\n\t    return NewConversationHeaderComponent;\r\n\t}());\r\n\texports.NewConversationHeaderComponent = NewConversationHeaderComponent;\r\n\n\n/***/ },\n\n/***/ 1304:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<header class=\\\"chat-header has-message-drop\\\">\\n  <div class=\\\"layout layout--middle\\\">\\n    <div class=\\\"layout__item\\\">\\n      <div class=\\\"has-input-left-labeled has-input-left-labeled--big\\\">\\n        <label class=\\\"left-labeled-label\\\" for=\\\"\\\">To:&nbsp;</label>\\n        <div class=\\\"tokenfield\\\" *ngIf=\\\"tokens.length > 0\\\">\\n          <div class=\\\"token\\\" *ngFor=\\\"#token of tokens; #i = index;\\\" (click)=\\\"activeToken = i\\\" [ngClass]=\\\"{'active': activeToken === i}\\\">\\n            <span class=\\\"token-label\\\">{{token.first_name}}</span>\\n            <a (click)=\\\"removeToken(i)\\\" class=\\\"close\\\">×</a>\\n          </div>\\n        </div>\\n        <div class=\\\"left-labeled-input\\\" [ngClass]=\\\"{'is-hidden': !searchInputVisible}\\\">\\n          <prs-search-connections (selected)=\\\"addToken($event)\\\"></prs-search-connections>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</header>\\n\"\n\n/***/ },\n\n/***/ 1284:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(22);\r\n\tvar conversation_input_1 = __webpack_require__(1248);\r\n\tvar new_conversation_header_component_1 = __webpack_require__(1283);\r\n\tvar services_1 = __webpack_require__(12);\r\n\tvar NewConversationComponent = (function () {\r\n\t    function NewConversationComponent(inboxService, messagesService, userService, _router, _params) {\r\n\t        var _this = this;\r\n\t        this.inboxService = inboxService;\r\n\t        this.messagesService = messagesService;\r\n\t        this.userService = userService;\r\n\t        this._router = _router;\r\n\t        this._params = _params;\r\n\t        this.tokens = [];\r\n\t        this.initialTokens = [];\r\n\t        this.message = '';\r\n\t        this.friendId = this._params.get('friendId');\r\n\t        //preselect a connection\r\n\t        if (this.friendId !== null) {\r\n\t            var uri = \"/api/v1/auth/user/\" + this.friendId + \"/\";\r\n\t            var channel_1 = this.userService.findOneByUri(uri)\r\n\t                .subscribe(function (data) {\r\n\t                _this.initialTokens = [{\r\n\t                        first_name: data.first_name,\r\n\t                        image: data.image,\r\n\t                        friend_id: _this.friendId\r\n\t                    }];\r\n\t                channel_1.unsubscribe();\r\n\t            }, function (err) { return console.log('user could not be found'); });\r\n\t        }\r\n\t    }\r\n\t    NewConversationComponent.prototype.sendMessage = function (message) {\r\n\t        var _this = this;\r\n\t        if (this.tokens.length === 1) {\r\n\t            var channel_2 = this.messagesService.sendNew(this.tokens[0].friend_id, message)\r\n\t                .subscribe(function (data) {\r\n\t                channel_2.unsubscribe();\r\n\t                _this.inboxService.addSender(_this.tokens[0].friend_id);\r\n\t                _this._router.parent.navigate(['/Messages', 'SingleConversation', { threadId: _this.tokens[0].friend_id }]);\r\n\t            }, function (error) { return console.log('Could not create new message.'); });\r\n\t        }\r\n\t    };\r\n\t    NewConversationComponent.prototype.routerOnActivate = function (nextInstruction, prevInstruction) {\r\n\t        this.inboxService.deselectThreads();\r\n\t    };\r\n\t    NewConversationComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-new-conversation',\r\n\t            template: __webpack_require__(1305),\r\n\t            directives: [\r\n\t                new_conversation_header_component_1.NewConversationHeaderComponent,\r\n\t                conversation_input_1.ConversationInputComponent\r\n\t            ],\r\n\t            providers: [\r\n\t                services_1.MessagesService\r\n\t            ]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [services_1.InboxService, services_1.MessagesService, services_1.UserAuthService, router_1.Router, router_1.RouteParams])\r\n\t    ], NewConversationComponent);\r\n\t    return NewConversationComponent;\r\n\t}());\r\n\texports.NewConversationComponent = NewConversationComponent;\r\n\n\n/***/ },\n\n/***/ 1305:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<prs-new-conversation-header [initialTokens]=\\\"initialTokens\\\" (selected)=\\\"tokens = $event\\\"></prs-new-conversation-header>\\n<div class=\\\"chat\\\">\\n  <div class=\\\"chat-wrapper\\\">\\n    <div class=\\\"chat__messages-wrapper\\\">\\n      <div class=\\\"chat__messages\\\">\\n        <div class=\\\"chat__messages__blank-slate\\\">\\n          <svg role=\\\"img\\\" class=\\\"icon chat-empty-state__icon\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"/static/assets/icons/icons.svg#start_conversation\\\"></use>\\n          </svg>\\n          <h3 class=\\\"chat-empty-state__title\\\">Start conversation</h3>\\n          <p class=\\\"chat-empty-state__par\\\">Type your message below to start Conversation</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <prs-send-message [disabled]=\\\"tokens.length === 0\\\" (newMessage)=\\\"sendMessage($event)\\\"></prs-send-message>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 1285:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar common_1 = __webpack_require__(133);\r\n\tvar http_1 = __webpack_require__(86);\r\n\tvar directives_1 = __webpack_require__(28);\r\n\tvar SearchConnectionsComponent = (function () {\r\n\t    function SearchConnectionsComponent(http) {\r\n\t        this.http = http;\r\n\t        this.selected = new core_1.EventEmitter();\r\n\t        this.searchTerm = new common_1.Control();\r\n\t        this.resultsVisible = false;\r\n\t        this.selectedIndex = -1;\r\n\t        this.resultsCount = 0;\r\n\t        this.resultsCache = [];\r\n\t        this.results = this._search(this.searchTerm.valueChanges);\r\n\t    }\r\n\t    SearchConnectionsComponent.prototype.keyEvent = function (event) {\r\n\t        switch (event.keyCode) {\r\n\t            case 13:\r\n\t                //enter\r\n\t                if (this.selectedIndex !== -1) {\r\n\t                    this.select(this.resultsCache[this.selectedIndex]);\r\n\t                }\r\n\t                break;\r\n\t            case 40:\r\n\t                //down\r\n\t                this.selectedIndex++;\r\n\t                if (this.selectedIndex > this.resultsCount - 1) {\r\n\t                    this.selectedIndex = this.resultsCount - 1;\r\n\t                }\r\n\t                if (this.selectedIndex > 3) {\r\n\t                    setTimeout(function () {\r\n\t                        var container = jQuery('.message-drop');\r\n\t                        var scrollTo = jQuery('.message-drop__results__result.is-active');\r\n\t                        jQuery('.message-drop').scrollTop(scrollTo.offset().top - container.offset().top + container.scrollTop());\r\n\t                    });\r\n\t                }\r\n\t                break;\r\n\t            case 38:\r\n\t                //up\r\n\t                this.selectedIndex--;\r\n\t                if (this.selectedIndex < 0) {\r\n\t                    this.selectedIndex = 0;\r\n\t                }\r\n\t                if (this.selectedIndex !== -1) {\r\n\t                    setTimeout(function () {\r\n\t                        var container = jQuery('.message-drop');\r\n\t                        var scrollTo = jQuery('.message-drop__results__result.is-active');\r\n\t                        jQuery('.message-drop').scrollTop(scrollTo.offset().top - container.offset().top + container.scrollTop());\r\n\t                    });\r\n\t                }\r\n\t                //prevent moving cursor to begining of input\r\n\t                event.preventDefault();\r\n\t                break;\r\n\t            case 27:\r\n\t                //escape\r\n\t                this.resultsVisible = false;\r\n\t                break;\r\n\t            default:\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    SearchConnectionsComponent.prototype.ngOnInit = function () {\r\n\t    };\r\n\t    SearchConnectionsComponent.prototype.select = function (result) {\r\n\t        this.resultsVisible = false;\r\n\t        this.resultsCache = [];\r\n\t        this.searchTerm.updateValue('');\r\n\t        this.selected.emit(result);\r\n\t    };\r\n\t    SearchConnectionsComponent.prototype._search = function (terms, debounceDuration) {\r\n\t        var _this = this;\r\n\t        if (debounceDuration === void 0) { debounceDuration = 400; }\r\n\t        return terms.debounceTime(debounceDuration)\r\n\t            .distinctUntilChanged()\r\n\t            .switchMap(function (term) { return _this._rawSearch(term); });\r\n\t    };\r\n\t    SearchConnectionsComponent.prototype._rawSearch = function (term) {\r\n\t        var _this = this;\r\n\t        var url = \"/api/v1/connectionssearch/?format=json&first_name=\" + term;\r\n\t        return this.http\r\n\t            .get(url)\r\n\t            .map(function (request) {\r\n\t            _this.selectedIndex = -1;\r\n\t            var res = request.json();\r\n\t            _this.resultsCache = res.objects;\r\n\t            _this.resultsCount = res.meta.total_count;\r\n\t            if (_this.resultsCount > 0) {\r\n\t                _this.resultsVisible = true;\r\n\t            }\r\n\t            else {\r\n\t                _this.resultsVisible = false;\r\n\t            }\r\n\t            return _this.resultsCache;\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], SearchConnectionsComponent.prototype, \"selected\", void 0);\r\n\t    SearchConnectionsComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-search-connections',\r\n\t            template: __webpack_require__(1306),\r\n\t            directives: [directives_1.CheckImageDirective]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [http_1.Http])\r\n\t    ], SearchConnectionsComponent);\r\n\t    return SearchConnectionsComponent;\r\n\t}());\r\n\texports.SearchConnectionsComponent = SearchConnectionsComponent;\r\n\n\n/***/ },\n\n/***/ 1306:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<input (click)=\\\"resultsVisible = true\\\" (focus)=\\\"resultsVisible = true\\\" (blur)=\\\"resultsVisible = false\\\" (keydown)=\\\"keyEvent($event)\\\" [ngFormControl]=\\\"searchTerm\\\" type=\\\"text\\\" class=\\\"left-labeled-input__element js-message-to\\\" placeholder=\\\"NAME\\\">\\n<div class=\\\"message-drop\\\" [ngClass]=\\\"{'is-invisible': !resultsVisible}\\\">\\n  <div class=\\\"message-drop__results\\\">\\n    <a class=\\\"message-drop__results__result\\\" *ngFor=\\\"#result of results | async; #i = index\\\" (mouseover)=\\\"selectedIndex = i\\\" (click)=\\\"select(result)\\\" [ngClass]=\\\"{'is-active': selectedIndex === i}\\\">\\n      <div class=\\\"flag flag--small\\\">\\n        <div class=\\\"flag__img\\\">\\n          <div class=\\\"avatar avatar--medium\\\">\\n            <div class=\\\"avatar-holder\\\" checkimage=\\\"{{result.image}}\\\" [suffix]=\\\"'.56x56_q100_crop.jpg'\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flag__body\\\">\\n          <div class=\\\"message__name\\\">{{result.first_name}}</div>\\n        </div>\\n      </div>\\n    </a>\\n  </div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 1286:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1288));\r\n\n\n/***/ },\n\n/***/ 1287:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar router_1 = __webpack_require__(22);\r\n\tvar directives_1 = __webpack_require__(28);\r\n\tvar MessageComponent = (function () {\r\n\t    function MessageComponent(_router) {\r\n\t        this._router = _router;\r\n\t    }\r\n\t    MessageComponent.prototype.openProfile = function (username) {\r\n\t        this._router.parent.parent.navigate(['./ProfileView', { username: username }]);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], MessageComponent.prototype, \"message\", void 0);\r\n\t    MessageComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-message',\r\n\t            directives: [directives_1.CheckImageDirective],\r\n\t            template: \"\\n  <div class=\\\"message is-open\\\">\\n    <div class=\\\"flag flag--top flag--small\\\">\\n      <div class=\\\"flag__img\\\" (click)=\\\"openProfile(message.username)\\\">\\n        <div class=\\\"avatar avatar--medium\\\">\\n          <div class=\\\"avatar-holder\\\"\\n           checkimage=\\\"{{message.image}}\\\" [suffix]=\\\"'.56x56_q100_crop.jpg'\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"flag__body\\\">\\n        <div class=\\\"message__name\\\">\\n          <span (click)=\\\"openProfile(message.username)\\\">{{message?.name}}</span>\\n          <span (click)=\\\"openProfile(message.username)\\\" class=\\\"message__timestamp\\\">{{message?.time}}</span>\\n        </div>\\n        <div class=\\\"message__text\\\">{{message?.body}}</div>\\n      </div>\\n    </div>\\n  </div>\\n  \",\r\n\t            changeDetection: core_1.ChangeDetectionStrategy.OnPush\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_1.Router])\r\n\t    ], MessageComponent);\r\n\t    return MessageComponent;\r\n\t}());\r\n\texports.MessageComponent = MessageComponent;\r\n\n\n/***/ },\n\n/***/ 1288:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar message_component_1 = __webpack_require__(1287);\r\n\tvar MessagesListComponent = (function () {\r\n\t    function MessagesListComponent() {\r\n\t    }\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], MessagesListComponent.prototype, \"messages\", void 0);\r\n\t    MessagesListComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-message-list',\r\n\t            template: \"\\n  <template ngFor #item [ngForOf]=\\\"messages\\\">\\n    <div class=\\\"chat__time\\\">\\n      <hr class=\\\"hr\\\">\\n      <span class=\\\"chat__time__value\\\">{{item.displayDate}}</span>\\n    </div>\\n    <prs-message *ngFor=\\\"#m of item.data\\\" [message]=\\\"m\\\"></prs-message>\\n  </template>\\n  \",\r\n\t            directives: [\r\n\t                message_component_1.MessageComponent\r\n\t            ]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], MessagesListComponent);\r\n\t    return MessagesListComponent;\r\n\t}());\r\n\texports.MessagesListComponent = MessagesListComponent;\r\n\n\n/***/ },\n\n/***/ 1289:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1290));\r\n\n\n/***/ },\n\n/***/ 1290:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar thread_component_1 = __webpack_require__(1291);\r\n\tvar ThreadListComponent = (function () {\r\n\t    function ThreadListComponent() {\r\n\t        this.selected = new core_1.EventEmitter();\r\n\t    }\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ThreadListComponent.prototype, \"threads\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ThreadListComponent.prototype, \"active\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], ThreadListComponent.prototype, \"selected\", void 0);\r\n\t    ThreadListComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-thread-list',\r\n\t            template: \"\\n  <prs-thread [isActive]=\\\"active\\\" (selected)=\\\"selected.next($event)\\\" *ngFor=\\\"#item of threads\\\" [thread]=\\\"item\\\"></prs-thread>\\n  \",\r\n\t            directives: [\r\n\t                thread_component_1.ThreadComponent\r\n\t            ]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ThreadListComponent);\r\n\t    return ThreadListComponent;\r\n\t}());\r\n\texports.ThreadListComponent = ThreadListComponent;\r\n\n\n/***/ },\n\n/***/ 1291:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar directives_1 = __webpack_require__(28);\r\n\tvar ThreadComponent = (function () {\r\n\t    function ThreadComponent() {\r\n\t        this.selected = new core_1.EventEmitter();\r\n\t    }\r\n\t    ThreadComponent.prototype.onSelect = function (thread) {\r\n\t        if (this.isActive !== thread.threadId) {\r\n\t            this.selected.next(thread);\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ThreadComponent.prototype, \"thread\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Object)\r\n\t    ], ThreadComponent.prototype, \"isActive\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], ThreadComponent.prototype, \"selected\", void 0);\r\n\t    ThreadComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'prs-thread',\r\n\t            directives: [directives_1.CheckImageDirective],\r\n\t            template: \"\\n  <div class=\\\"message\\\" [ngClass]=\\\"{'is-active': isActive === thread.threadId, 'is-unread': thread.unread === true}\\\" (click)=\\\"onSelect(thread)\\\">\\n    <div class=\\\"flag flag--responsive flag--small\\\">\\n      <div class=\\\"flag__img\\\">\\n        <span class=\\\"message__inread-indicator\\\"></span>\\n        <div class=\\\"avatar avatar--medium\\\">\\n          <div class=\\\"avatar-holder\\\"\\n          checkimage=\\\"{{thread.image}}\\\" [suffix]=\\\"'.56x56_q100_crop.jpg'\\\">\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"flag__body\\\">\\n        <div class=\\\"message__name\\\">{{thread.name}}</div>\\n        <div class=\\\"message__text truncate\\\">{{thread.body}}</div>\\n        <div class=\\\"message__time\\\">{{thread.sentAt}}</div>\\n        <div class=\\\"message__total\\\" [ngClass]=\\\"{'is-visible': thread.unreadCounter > 0}\\\">{{thread.unreadCounter}}</div>\\n      </div>\\n    </div>\\n  </div>\\n  \"\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], ThreadComponent);\r\n\t    return ThreadComponent;\r\n\t}());\r\n\texports.ThreadComponent = ThreadComponent;\r\n\n\n/***/ }\n\n});\n\n\n/** WEBPACK FOOTER **\n ** 2.d21d91f4275badd917d7.chunk.js\n **/","import {Component, Input, Output, EventEmitter} from 'angular2/core';\n\n\n@Component({\n  selector: 'prs-send-message',\n  template: `\n  <div class=\"chat__send-message\">\n    <div class=\"tableize\">\n      <div class=\"tableize__cell tableize__cell--fill\">\n        <div class=\"tableize__content\">\n          <textarea [(ngModel)]=\"message\" class=\"c-input c-input--large\" placeholder=\"Write a message\"></textarea>\n        </div>\n      </div>\n      <div class=\"tableize__cell\">\n        <div class=\"tableize__content chat__send-message__has-btn\">\n          <a (click)=\"sendMessage($event)\" class=\"btn btn-1 btn-1--full btn-1--filled btn-1--blue \">Send</a>\n        </div>\n      </div>\n    </div>\n  </div>\n  `\n})\nexport class ConversationInputComponent {\n  @Output() newMessage: EventEmitter<any> = new EventEmitter();\n  @Input() disabled;\n  message = '';\n\n  sendMessage(event) {\n    if (this.message.length > 0 && !this.disabled) {\n      this.newMessage.next(this.message);\n      this.message = '';\n    }\n\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversation-input/conversation-input.component.ts\n **/","export * from './conversation-input.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversation-input/index.ts\n **/","import {Component, Input} from 'angular2/core';\n\nimport {DropdownDirective} from '../../shared/directives';\n\n@Component({\n  selector: 'prs-conversation-header',\n  directives: [\n    DropdownDirective\n  ],\n  template: require('./conversation-header.html')\n})\nexport class ConversationHeaderComponent {\n  @Input() name;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversation/conversation-header.component.ts\n **/","module.exports = \"<header class=\\\"chat-header\\\">\\n  <div class=\\\"layout layout--middle\\\" *ngIf=\\\"name !== ''\\\">\\n    <div class=\\\"layout__item 3/4\\\">\\n      <div class=\\\"has-input-left-labeled has-input-left-labeled--big\\\">\\n        <label class=\\\"left-labeled-label is-hidden\\\" for=\\\"\\\">To:</label>\\n        <div class=\\\"left-labeled-input\\\">\\n          <input type=\\\"text\\\" class=\\\"left-labeled-input is-hidden\\\" placeholder=\\\"NAME\\\">\\n          <span class=\\\"left-labeled-value\\\">{{name}}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"layout__item 1/4 text-right\\\">\\n      <div class=\\\"has-dropdown-basic\\\">\\n        <a class=\\\"btn btn-1 btn-1--red btn--icon-circle-small js-share mr\\\" dropdown=\\\"#messagesDropdown\\\">\\n          <svg role=\\\"img\\\" class=\\\"icon icon--tiny\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"/static/assets/icons/icons.svg#icon-more\\\"></use>\\n          </svg>\\n        </a>\\n        <div class=\\\"dropdown-basic dropdown-basic--medium dropdown-basic--arrow-right\\\" id=\\\"messagesDropdown\\\">\\n          <ul class=\\\"list-bare\\\">\\n            <li><a>Delete conversation</a></li>\\n            <li><a>Report spam</a></li>\\n          </ul>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</header>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/messages/conversation/conversation-header.html\n ** module id = 1302\n ** module chunks = 2\n **/","import {Component, Input, OnDestroy, OnInit} from 'angular2/core';\nimport {RouteParams, Router} from 'angular2/router';\n\nimport {\n  InboxService,\n  UserAuthService,\n  MessagesService,\n  MessagesCounterService,\n  WebsocketService\n} from '../../shared/services';\n\n\nimport {MessagesListComponent} from '../../shared/components/messages-list';\nimport {ConversationInputComponent} from '../conversation-input';\nimport {ConversationHeaderComponent} from './conversation-header.component';\n\nimport {LoadingComponent} from '../../shared/components/loading';\n\n@Component({\n  selector: 'prs-conversation',\n  directives: [\n    ConversationHeaderComponent,\n    MessagesListComponent,\n    ConversationInputComponent,\n    LoadingComponent\n  ],\n  providers: [\n    MessagesService,\n    UserAuthService\n  ],\n  template: `\n  <prs-conversation-header [name]=\"name\"></prs-conversation-header>\n  <div class=\"chat\">\n    <div class=\"chat-wrapper\" id=\"messages\">\n      <div class=\"chat__messages-wrapper\">\n        <div class=\"chat__messages\">\n          <prs-loading [status]=\"loadingMessages\"></prs-loading>\n          <prs-message-list [messages]=\"messages\"></prs-message-list>\n        </div>\n      </div>\n    </div>\n    <prs-send-message [disabled]=\"0\" (newMessage)=\"sendMessage($event)\"></prs-send-message>\n  </div>\n  `\n})\nexport class ConversationComponent implements OnInit, OnDestroy {\n  name: string = '';\n  messages: Array<any> = [];\n  totalCount;\n  loadingMessages: boolean = false;\n  loadingMessagesFinished: boolean = false;\n  isMessagesEmpty: boolean = false;\n  messagesNext: string = '';\n  hasNew = false;\n  messagesServiceInstance;\n  websocketServiceInstance;\n  threadId;\n  scrollOffset = null;\n\n  constructor(\n    private _params: RouteParams,\n    private inboxService: InboxService,\n    private messagesService: MessagesService,\n    private userService: UserAuthService,\n    private messagesCounterService: MessagesCounterService,\n    private websocketService: WebsocketService,\n    private _router: Router\n  ) {\n    this.threadId = this._params.get('threadId');\n  }\n\n\n  ngOnInit() {\n    let url = `/api/v1/auth/user/${this.threadId}/`;\n    let channel = this.userService.findByUri(url)\n      .subscribe((data) => {\n        this.name = data.first_name;\n        channel.unsubscribe();\n      }, (err) => console.log('User could not be loaded'));\n\n    this.inboxService.select(this.threadId);\n\n    setTimeout(() => {\n      this.messagesCounterService.refreshCounter();\n    }, 500);\n\n    //subscribe to messages service updates\n    this.messagesServiceInstance = this.messagesService.serviceObserver()\n      .subscribe((res) => {\n        this.loadingMessages = res.loading;\n        this.loadingMessagesFinished = res.finished;\n        this.isMessagesEmpty = res.isEmpty;\n        this.messagesNext = res.next;\n        this.hasNew = res.hasNew;\n        // this.name = res.name;\n        let prevCount = this.messages.length;\n\n        if (res.total === 0 && res.initialLoadingFinished) {\n          this._router.parent.navigate(['/Messages', 'ConversationNewSelected', { friendId: this.threadId }]);\n        }\n\n        //when first loading messages, scroll to bottom\n        // after initial messages have been rendered\n        if (prevCount === 0 && !this.loadingMessages) {\n          let elem = jQuery('#messages')[0];\n          setTimeout(() => {\n            elem.scrollTop = elem.scrollHeight;\n          });\n        }\n\n\n\n        //if receieved new message scroll to bottom\n        if (this.hasNew && !this.loadingMessages) {\n          let elem = jQuery('#messages')[0];\n          setTimeout(() => {\n            elem.scrollTop = elem.scrollHeight;\n          });\n          this.hasNew = false;\n        }\n\n        this.messages = res.data;\n\n\n\n        //when loading more messages finishes, scroll to bottom\n        // after new messages have been rendered\n        if (prevCount > 0 && !this.loadingMessages && this.scrollOffset !== null) {\n          let elem = jQuery('#messages')[0];\n          setTimeout(() => {\n            elem.scrollTop = elem.scrollHeight - this.scrollOffset;\n            this.scrollOffset = null;\n          });\n        }\n\n        if (this.loadingMessagesFinished === false) {\n          jQuery('#messages').bind('scroll', this.handleScrollEvent.bind(this));\n        } else {\n          jQuery('#messages').unbind('scroll');\n        }\n\n      });\n\n    //start loading messages\n    this.messagesService.startLoadingMessages(this.threadId);\n\n    //subscribe to webscoket service updates\n    this.websocketServiceInstance = this.websocketService.on('messages:new').subscribe((data: any) => {\n      if (data.sender === `/api/v1/auth/user/${this.threadId}/`) {\n        this.messagesService.recievedMessage(data);\n      }\n    });\n  }\n\n  handleScrollEvent(event) {\n    //reverse scroll\n    let elem = jQuery('#messages')[0];\n    if (this.messagesNext && elem.scrollTop <= 50) {\n      if (!this.loadingMessages && !this.hasNew) {\n        this.scrollOffset = elem.scrollHeight;\n        this.messagesService.loadMore(this.threadId);\n      }\n    }\n\n  }\n\n  sendMessage(message) {\n    this.messagesService.send(this.threadId, message);\n  }\n\n  ngOnDestroy() {\n    if (this.messagesServiceInstance) {\n      this.messagesServiceInstance.unsubscribe();\n    }\n\n    if (this.websocketServiceInstance) {\n      this.websocketServiceInstance.unsubscribe();\n    }\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversation/conversation.component.ts\n **/","export * from './conversation.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversation/index.ts\n **/","import {Component, Input, OnDestroy} from 'angular2/core';\nimport {ROUTER_DIRECTIVES} from 'angular2/router';\n\nimport {InboxService} from '../../shared/services';\n\n@Component({\n  selector: 'prs-conversations-header',\n  directives: [\n    ROUTER_DIRECTIVES\n  ],\n  template: `\n  <header class=\"chat-sidebar-header\">\n    <div class=\"layout layout--middle\">\n      <div class=\"layout__item 3/4\">\n        <h3 class=\"chat-sidebar-header__title\">Conversation <span class=\"chat-sidebar-header__title__value\">({{counter}})</span></h3>\n      </div>\n      <div class=\"layout__item 1/4 text-right\">\n        <a [routerLink]=\"['/Messages']\" class=\"btn btn-1 btn-1--blue btn--icon-circle-small js-share mr-\">\n          <svg role=\"img\" class=\"icon icon--tiny\">\n            <use xlink:href=\"/static/assets/icons/icons.svg#icon-new-message\"></use>\n          </svg>\n        </a>\n      </div>\n    </div>\n  </header>\n  `\n})\nexport class ConversationsHeaderComponent implements OnDestroy {\n  @Input() counter;\n  inboxServiceObserver;\n  constructor(private inboxService: InboxService) {\n    this.inboxServiceObserver = this.inboxService.serviceCounterObserver()\n      .subscribe(data => {\n        this.counter = data;\n      });\n  }\n\n  ngOnDestroy() {\n    this.inboxServiceObserver.unsubscribe();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversations/conversations-header.component.ts\n **/","import {\n  Component,\n  Input,\n  Output,\n  ElementRef,\n  EventEmitter,\n  OnInit,\n  OnDestroy\n} from 'angular2/core';\n\nimport {\n  InboxService,\n  MessagesCounterService,\n  WebsocketService\n} from '../../shared/services';\n\nimport {ThreadListComponent} from '../../shared/components/thread-list';\nimport {LoadingComponent} from '../../shared/components/loading';\n\n@Component({\n  selector: 'prs-conversations',\n  directives: [\n    ThreadListComponent,\n    LoadingComponent\n  ],\n  template: `\n    <aside class=\"chat-sidebar is-scrollable-y\" id=\"inbox\" (selected)=\"navigateToConversation($event)\">\n      <prs-thread-list (selected)=\"onSelect($event)\" [active]=\"activeThread\" [threads]=\"threads\"></prs-thread-list>\n      <prs-loading [status]=\"loadingInbox\"></prs-loading>\n    </aside>\n  `\n})\nexport class ConversationsComponent implements OnInit, OnDestroy {\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  threads: Array<any> = [];\n  loadingInbox: boolean = false;\n  loadingInboxFinished: boolean = false;\n  isInboxEmpty: boolean = false;\n  inboxNext: string = '';\n  inboxServiceInstance;\n  websocketServiceInstance;\n  activeThread = null;\n\n  constructor(\n    private inboxService: InboxService,\n    private messagesCounterService: MessagesCounterService,\n    private websocketService: WebsocketService,\n    private element: ElementRef\n  ) {\n\n  }\n\n  ngOnInit() {\n    setTimeout(() => {\n      this.messagesCounterService.refreshCounter();\n    }, 500);\n\n    //subscribe to inbox service updates\n    this.inboxServiceInstance = this.inboxService.serviceObserver()\n      .subscribe((res) => {\n        this.loadingInbox = res.loading;\n        this.threads = res.data;\n        this.loadingInboxFinished = res.finished;\n        this.isInboxEmpty = res.isEmpty;\n        this.inboxNext = res.next;\n        this.activeThread = res.selected;\n\n        if (this.loadingInboxFinished === false) {\n          jQuery('#inbox').bind('scroll', this.handleScrollEvent.bind(this));\n        } else {\n          jQuery('#inbox').unbind('scroll');\n        }\n\n      });\n\n    //start loading inbox\n    this.inboxService.startLoadingInbox();\n\n    this.websocketServiceInstance = this.websocketService.on('messages:new').subscribe((data: any) => {\n\n      if (this.activeThread !== null) {\n        this.inboxService.markRead(this.activeThread);\n      }\n\n\n      setTimeout(() => {\n        this.inboxService.addSender(data.friend_id);\n        this.messagesCounterService.refreshCounter();\n      }, 500);\n\n    });\n\n  }\n\n  onSelect(thread) {\n    this.inboxService.select(thread.threadId);\n    this.selected.next(thread.threadId);\n  }\n\n  handleScrollEvent(event) {\n    let scrollOffset = jQuery('#inbox').scrollTop();\n    let threshold = jQuery(document).height() - jQuery('#inbox').height() - 60;\n\n    if (this.inboxNext && scrollOffset > threshold) {\n      if (!this.loadingInbox) {\n        this.inboxService.loadMore();\n      }\n    }\n\n  }\n\n\n  ngOnDestroy() {\n    if (this.inboxServiceInstance) {\n      this.inboxServiceInstance.unsubscribe();\n    }\n    if (this.websocketServiceInstance) {\n      this.websocketServiceInstance.unsubscribe();\n    }\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversations/conversations.component.ts\n **/","export * from './conversations-header.component';\nexport * from './conversations.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/conversations/index.ts\n **/","export * from './messages.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/index.ts\n **/","import {Component, OnInit} from 'angular2/core';\nimport {RouteConfig, RouterLink, ROUTER_DIRECTIVES, Router, Location}\nfrom 'angular2/router';\n\n\nimport {InboxService} from '../shared/services';\n\nimport {\n  ConversationsComponent,\n  ConversationsHeaderComponent\n} from './conversations';\n\nimport {ConversationComponent} from './conversation';\nimport {NewConversationComponent} from './new-conversation';\n\n\n@Component({\n  selector: 'prs-messages',\n  template: require('./messages.html'),\n  directives: [\n    ConversationsComponent,\n    ConversationsHeaderComponent,\n    ROUTER_DIRECTIVES\n  ],\n  providers: [\n    InboxService\n  ]\n})\n@RouteConfig([\n  {\n    path: '/:threadId',\n    component: ConversationComponent,\n    name: 'SingleConversation'\n  },\n  {\n    path: '/new/',\n    component: NewConversationComponent,\n    name: 'ConversationNew',\n    useAsDefault: true\n  },\n  {\n    path: '/new/:friendId',\n    component: NewConversationComponent,\n    name: 'ConversationNewSelected',\n  }\n])\nexport class MessagesComponent implements OnInit {\n  counter: number = 0;\n  constructor(\n    private inboxService: InboxService,\n    private _router: Router\n    ) {\n\n  }\n\n  ngOnInit() {\n    document.body.scrollTop = document.documentElement.scrollTop = 0;\n  }\n\n  navigateToConversation(id) {\n    this._router.navigate(['SingleConversation', { threadId: id }]);\n  }\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/messages.component.ts\n **/","module.exports = \"<div class=\\\"layout layout--flush position-relative\\\">\\n  <div class=\\\"layout__item extralarge-and-up-3/10 4/10\\\">\\n    <prs-conversations-header [counter]=\\\"counter\\\"></prs-conversations-header>\\n    <prs-conversations (selected)=\\\"navigateToConversation($event)\\\"></prs-conversations>\\n  </div>\\n  <div class=\\\"layout__item extralarge-and-up-7/10 6/10\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/messages/messages.html\n ** module id = 1303\n ** module chunks = 2\n **/","export * from './new-conversation.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/new-conversation/index.ts\n **/","import {Component, Input, Output, EventEmitter} from 'angular2/core';\nimport {findIndex} from 'lodash';\n\nimport {SearchConnectionsComponent} from './search-connections.component';\n\n\nconst TOKEN_LIMIT: number = 1;\n\n@Component({\n  selector: 'prs-new-conversation-header',\n  directives: [\n    SearchConnectionsComponent\n  ],\n  template: require('./new-conversation-header.html')\n})\nexport class NewConversationHeaderComponent {\n  @Output() selected: EventEmitter<any> = new EventEmitter;\n  @Input() initialTokens;\n  tokens: any[] = [];\n  searchInputVisible: boolean = true;\n  activeToken: number = -1;\n\n  ngOnChanges(values) {\n    if (values.initialTokens && values.initialTokens.currentValue[0]) {\n      //add initial token;\n      this.addToken(values.initialTokens.currentValue[0]);\n    }\n  }\n\n  addToken(token) {\n    //check if limit is reached\n    if (this.tokens.length < TOKEN_LIMIT) {\n      //check if token already exists\n      let i = findIndex(this.tokens, { friend_id: token.friend_id });\n      if (i === -1) {\n        this.tokens = [...this.tokens, token];\n        this.activeToken = -1;\n        this.selected.emit(this.tokens);\n      } else { //make token active\n        this.activeToken = i;\n      }\n      //if token limit reached, hide search input\n      if (this.tokens.length === TOKEN_LIMIT) {\n        this.searchInputVisible = false;\n      }\n    }\n  }\n\n  removeToken(index) {\n    this.activeToken = -1;\n    this.tokens.splice(index, 1);\n    this.selected.emit(this.tokens);\n    this.searchInputVisible = true;\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/new-conversation/new-conversation-header.component.ts\n **/","module.exports = \"<header class=\\\"chat-header has-message-drop\\\">\\n  <div class=\\\"layout layout--middle\\\">\\n    <div class=\\\"layout__item\\\">\\n      <div class=\\\"has-input-left-labeled has-input-left-labeled--big\\\">\\n        <label class=\\\"left-labeled-label\\\" for=\\\"\\\">To:&nbsp;</label>\\n        <div class=\\\"tokenfield\\\" *ngIf=\\\"tokens.length > 0\\\">\\n          <div class=\\\"token\\\" *ngFor=\\\"#token of tokens; #i = index;\\\" (click)=\\\"activeToken = i\\\" [ngClass]=\\\"{'active': activeToken === i}\\\">\\n            <span class=\\\"token-label\\\">{{token.first_name}}</span>\\n            <a (click)=\\\"removeToken(i)\\\" class=\\\"close\\\">×</a>\\n          </div>\\n        </div>\\n        <div class=\\\"left-labeled-input\\\" [ngClass]=\\\"{'is-hidden': !searchInputVisible}\\\">\\n          <prs-search-connections (selected)=\\\"addToken($event)\\\"></prs-search-connections>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</header>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/messages/new-conversation/new-conversation-header.html\n ** module id = 1304\n ** module chunks = 2\n **/","import {Component, Output, EventEmitter} from 'angular2/core';\nimport {Router, RouteParams} from 'angular2/router';\n\n\nimport {ConversationInputComponent} from '../conversation-input';\nimport {NewConversationHeaderComponent} from './new-conversation-header.component';\n\nimport {\n  InboxService,\n  MessagesService,\n  UserAuthService\n} from '../../shared/services';\n\n\n@Component({\n  selector: 'prs-new-conversation',\n  template: require('./new-conversation.html'),\n  directives: [\n    NewConversationHeaderComponent,\n    ConversationInputComponent\n  ],\n  providers: [\n    MessagesService\n  ]\n})\nexport class NewConversationComponent {\n  tokens: any[] = [];\n  initialTokens: any[] = [];\n  message: string = '';\n  friendId;\n\n  constructor(\n    private inboxService: InboxService,\n    private messagesService: MessagesService,\n    private userService: UserAuthService,\n    private _router: Router,\n    private _params: RouteParams\n  ) {\n    this.friendId = this._params.get('friendId');\n    //preselect a connection\n    if (this.friendId !== null) {\n      let uri = `/api/v1/auth/user/${this.friendId}/`;\n      let channel = this.userService.findOneByUri(uri)\n        .subscribe(data => {\n          this.initialTokens = [{\n            first_name: data.first_name,\n            image: data.image,\n            friend_id: this.friendId\n          }];\n          channel.unsubscribe();\n        }, (err) => console.log('user could not be found'));\n    }\n  }\n\n  sendMessage(message) {\n    if (this.tokens.length === 1) {\n      let channel = this.messagesService.sendNew(this.tokens[0].friend_id, message)\n        .subscribe(data => {\n          channel.unsubscribe();\n          this.inboxService.addSender(this.tokens[0].friend_id);\n          this._router.parent.navigate(['/Messages', 'SingleConversation', { threadId: this.tokens[0].friend_id }]);\n        }, error => console.log('Could not create new message.'));\n    }\n\n  }\n\n  routerOnActivate(nextInstruction, prevInstruction) {\n    this.inboxService.deselectThreads();\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/new-conversation/new-conversation.component.ts\n **/","module.exports = \"<prs-new-conversation-header [initialTokens]=\\\"initialTokens\\\" (selected)=\\\"tokens = $event\\\"></prs-new-conversation-header>\\n<div class=\\\"chat\\\">\\n  <div class=\\\"chat-wrapper\\\">\\n    <div class=\\\"chat__messages-wrapper\\\">\\n      <div class=\\\"chat__messages\\\">\\n        <div class=\\\"chat__messages__blank-slate\\\">\\n          <svg role=\\\"img\\\" class=\\\"icon chat-empty-state__icon\\\">\\n            <use xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xlink:href=\\\"/static/assets/icons/icons.svg#start_conversation\\\"></use>\\n          </svg>\\n          <h3 class=\\\"chat-empty-state__title\\\">Start conversation</h3>\\n          <p class=\\\"chat-empty-state__par\\\">Type your message below to start Conversation</p>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <prs-send-message [disabled]=\\\"tokens.length === 0\\\" (newMessage)=\\\"sendMessage($event)\\\"></prs-send-message>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/messages/new-conversation/new-conversation.html\n ** module id = 1305\n ** module chunks = 2\n **/","import {\n  Component,\n  Output,\n  Input,\n  EventEmitter,\n  ElementRef,\n  OnInit\n} from 'angular2/core';\n\nimport {Control} from 'angular2/common';\nimport {Observable} from 'rxjs';\nimport {Http} from 'angular2/http';\nimport {CheckImageDirective} from '../../shared/directives';\n\ndeclare var jQuery: any;\n\n@Component({\n  selector: 'prs-search-connections',\n  template: require('./search-connections.html'),\n  directives: [CheckImageDirective]\n})\nexport class SearchConnectionsComponent {\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n  searchTerm = new Control();\n  results: Observable<any[]>;\n  resultsVisible: boolean = false;\n  selectedIndex: number = -1;\n  resultsCount: number = 0;\n  resultsCache: any[] = [];\n\n  constructor(public http: Http) {\n    this.results = this._search(this.searchTerm.valueChanges);\n  }\n\n  keyEvent(event) {\n\n    switch (event.keyCode) {\n      case 13:\n        //enter\n        if (this.selectedIndex !== -1) {\n          this.select(this.resultsCache[this.selectedIndex]);\n        }\n        break;\n      case 40:\n        //down\n        this.selectedIndex++;\n\n        if (this.selectedIndex > this.resultsCount - 1) {\n          this.selectedIndex = this.resultsCount - 1;\n        }\n\n        if (this.selectedIndex > 3) {\n          setTimeout(() => {\n            let container = jQuery('.message-drop');\n            let scrollTo = jQuery('.message-drop__results__result.is-active');\n            jQuery('.message-drop').scrollTop(\n              scrollTo.offset().top - container.offset().top + container.scrollTop()\n            );\n          });\n\n        }\n        break;\n      case 38:\n        //up\n        this.selectedIndex--;\n        if (this.selectedIndex < 0) {\n          this.selectedIndex = 0;\n        }\n        if (this.selectedIndex !== -1) {\n          setTimeout(() => {\n            let container = jQuery('.message-drop');\n            let scrollTo = jQuery('.message-drop__results__result.is-active');\n            jQuery('.message-drop').scrollTop(\n              scrollTo.offset().top - container.offset().top + container.scrollTop()\n            );\n          });\n\n        }\n        //prevent moving cursor to begining of input\n        event.preventDefault();\n        break;\n      case 27:\n        //escape\n        this.resultsVisible = false;\n        break;\n      default:\n        break;\n    }\n\n\n\n\n  }\n\n  ngOnInit() {\n\n  }\n\n  public select(result) {\n    this.resultsVisible = false;\n    this.resultsCache = [];\n    this.searchTerm.updateValue('');\n    this.selected.emit(result);\n  }\n\n  private _search(terms: Observable<string>, debounceDuration = 400): Observable<any[]> {\n    return terms.debounceTime(debounceDuration)\n      .distinctUntilChanged()\n      .switchMap((term: any) => this._rawSearch(term));\n  }\n\n  private _rawSearch(term: string): Observable<any> {\n    let url = `/api/v1/connectionssearch/?format=json&first_name=${term}`;\n    return this.http\n      .get(url)\n      .map(request => {\n        this.selectedIndex = -1;\n        let res = request.json();\n        this.resultsCache = res.objects;\n        this.resultsCount = res.meta.total_count;\n        if (this.resultsCount > 0) {\n          this.resultsVisible = true;\n        } else {\n          this.resultsVisible = false;\n        }\n        return this.resultsCache;\n      });\n  }\n\n\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/messages/new-conversation/search-connections.component.ts\n **/","module.exports = \"<input (click)=\\\"resultsVisible = true\\\" (focus)=\\\"resultsVisible = true\\\" (blur)=\\\"resultsVisible = false\\\" (keydown)=\\\"keyEvent($event)\\\" [ngFormControl]=\\\"searchTerm\\\" type=\\\"text\\\" class=\\\"left-labeled-input__element js-message-to\\\" placeholder=\\\"NAME\\\">\\n<div class=\\\"message-drop\\\" [ngClass]=\\\"{'is-invisible': !resultsVisible}\\\">\\n  <div class=\\\"message-drop__results\\\">\\n    <a class=\\\"message-drop__results__result\\\" *ngFor=\\\"#result of results | async; #i = index\\\" (mouseover)=\\\"selectedIndex = i\\\" (click)=\\\"select(result)\\\" [ngClass]=\\\"{'is-active': selectedIndex === i}\\\">\\n      <div class=\\\"flag flag--small\\\">\\n        <div class=\\\"flag__img\\\">\\n          <div class=\\\"avatar avatar--medium\\\">\\n            <div class=\\\"avatar-holder\\\" checkimage=\\\"{{result.image}}\\\" [suffix]=\\\"'.56x56_q100_crop.jpg'\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"flag__body\\\">\\n          <div class=\\\"message__name\\\">{{result.first_name}}</div>\\n        </div>\\n      </div>\\n    </a>\\n  </div>\\n</div>\\n\"\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/app/messages/new-conversation/search-connections.html\n ** module id = 1306\n ** module chunks = 2\n **/","export * from './messages-list.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/messages-list/index.ts\n **/","import {Component, Input, ChangeDetectionStrategy} from 'angular2/core';\nimport {Router} from 'angular2/router';\nimport {CheckImageDirective} from '../../directives';\n\n@Component({\n  selector: 'prs-message',\n  directives: [CheckImageDirective],\n  template: `\n  <div class=\"message is-open\">\n    <div class=\"flag flag--top flag--small\">\n      <div class=\"flag__img\" (click)=\"openProfile(message.username)\">\n        <div class=\"avatar avatar--medium\">\n          <div class=\"avatar-holder\"\n           checkimage=\"{{message.image}}\" [suffix]=\"'.56x56_q100_crop.jpg'\">\n          </div>\n        </div>\n      </div>\n      <div class=\"flag__body\">\n        <div class=\"message__name\">\n          <span (click)=\"openProfile(message.username)\">{{message?.name}}</span>\n          <span (click)=\"openProfile(message.username)\" class=\"message__timestamp\">{{message?.time}}</span>\n        </div>\n        <div class=\"message__text\">{{message?.body}}</div>\n      </div>\n    </div>\n  </div>\n  `,\n   changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class MessageComponent {\n  @Input() message;\n\n  constructor(private _router: Router) {\n\n  }\n\n  openProfile(username) {\n    this._router.parent.parent.navigate(['./ProfileView', { username: username }]);\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/messages-list/message.component.ts\n **/","import {Component, Input, ChangeDetectionStrategy} from 'angular2/core';\n\nimport {MessageComponent} from './message.component';\n\n@Component({\n  selector: 'prs-message-list',\n  template: `\n  <template ngFor #item [ngForOf]=\"messages\">\n    <div class=\"chat__time\">\n      <hr class=\"hr\">\n      <span class=\"chat__time__value\">{{item.displayDate}}</span>\n    </div>\n    <prs-message *ngFor=\"#m of item.data\" [message]=\"m\"></prs-message>\n  </template>\n  `,\n  directives: [\n    MessageComponent\n  ]\n})\nexport class MessagesListComponent {\n  @Input() messages;\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/messages-list/messages-list.component.ts\n **/","export * from './thread-list.component';\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/thread-list/index.ts\n **/","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  EventEmitter\n} from 'angular2/core';\n\nimport {ThreadComponent} from './thread.component';\n\n@Component({\n  selector: 'prs-thread-list',\n  template: `\n  <prs-thread [isActive]=\"active\" (selected)=\"selected.next($event)\" *ngFor=\"#item of threads\" [thread]=\"item\"></prs-thread>\n  `,\n  directives: [\n    ThreadComponent\n  ]\n})\nexport class ThreadListComponent {\n  @Input() threads;\n  @Input() active;\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/thread-list/thread-list.component.ts\n **/","import {\n  Component,\n  Input,\n  Output,\n  ChangeDetectionStrategy,\n  EventEmitter\n} from 'angular2/core';\n\nimport {CheckImageDirective} from '../../directives';\n\n@Component({\n  selector: 'prs-thread',\n  directives: [CheckImageDirective],\n  template: `\n  <div class=\"message\" [ngClass]=\"{'is-active': isActive === thread.threadId, 'is-unread': thread.unread === true}\" (click)=\"onSelect(thread)\">\n    <div class=\"flag flag--responsive flag--small\">\n      <div class=\"flag__img\">\n        <span class=\"message__inread-indicator\"></span>\n        <div class=\"avatar avatar--medium\">\n          <div class=\"avatar-holder\"\n          checkimage=\"{{thread.image}}\" [suffix]=\"'.56x56_q100_crop.jpg'\">\n          </div>\n        </div>\n      </div>\n      <div class=\"flag__body\">\n        <div class=\"message__name\">{{thread.name}}</div>\n        <div class=\"message__text truncate\">{{thread.body}}</div>\n        <div class=\"message__time\">{{thread.sentAt}}</div>\n        <div class=\"message__total\" [ngClass]=\"{'is-visible': thread.unreadCounter > 0}\">{{thread.unreadCounter}}</div>\n      </div>\n    </div>\n  </div>\n  `\n})\nexport class ThreadComponent {\n  @Input() thread;\n  @Input() isActive;\n  @Output() selected: EventEmitter<any> = new EventEmitter();\n\n  onSelect(thread) {\n    if (this.isActive !== thread.threadId) {\n      this.selected.next(thread);\n    }\n\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app/shared/components/thread-list/thread.component.ts\n **/"],"sourceRoot":""}