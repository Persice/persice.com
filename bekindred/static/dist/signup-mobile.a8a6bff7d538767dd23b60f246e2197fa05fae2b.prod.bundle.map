{"version":3,"sources":["webpack:///signup-mobile.a8a6bff7d538767dd23b60f246e2197fa05fae2b.prod.bundle.js","webpack:///./src/signup-mobile.browser.ts"],"names":["webpackJsonp","module","exports","__webpack_require__","main","initialHmrState","platform_browser_dynamic_1","bootstrap","signup_mobile_1","SignupMobileComponent","browser_1","PLATFORM_PROVIDERS_SIGNUP_MOBILE","concat","environment_1","ENV_PROVIDERS","APP_PROVIDERS","catch","err","console","error","document","addEventListener"],"mappings":"AAAAA,cAAc,IAER,SAASC,EAAQC,EAASC,GAE/B,YCiBD,SAAAC,GAAqBC,GAEnB,MAAOC,GAAAC,UAAUC,EAAAC,sBACZC,EAAAC,iCAAgCC,OAChCC,EAAAC,cACAN,EAAAO,gBAEFC,MAAM,SAAAC,GAAO,MAAAC,SAAQC,MAAMF,KAzBhC,GAAAX,GAAAH,EAAwB,KAKxBO,EAAAP,EAA+C,KAC/CU,EAAAV,EAA4B,KAM5BK,EAAAL,EAAmD,IAMnCD,GAAAE,KAAIA,CAiClBgB,UAASC,iBAAiB,mBAAoB,WAAM,MAAAjB","file":"signup-mobile.a8a6bff7d538767dd23b60f246e2197fa05fae2b.prod.bundle.js","sourcesContent":["webpackJsonp([4],[\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t/*\n\t * Providers provided by Angular\n\t */\n\tvar platform_browser_dynamic_1 = __webpack_require__(153);\n\t/*\n\t* Platform and Environment\n\t* our providers/directives/pipes\n\t*/\n\tvar browser_1 = __webpack_require__(223);\n\tvar environment_1 = __webpack_require__(224);\n\t/*\n\t* App Component\n\t* our top level component that holds all of our components\n\t*/\n\tvar signup_mobile_1 = __webpack_require__(563);\n\t/*\n\t * Bootstrap our Angular app with a top level component `App` and inject\n\t * our Services and Providers into Angular's dependency injection\n\t */\n\tfunction main(initialHmrState) {\n\t    return platform_browser_dynamic_1.bootstrap(signup_mobile_1.SignupMobileComponent, browser_1.PLATFORM_PROVIDERS_SIGNUP_MOBILE.concat(environment_1.ENV_PROVIDERS, signup_mobile_1.APP_PROVIDERS))\n\t        .catch(function (err) { return console.error(err); });\n\t}\n\texports.main = main;\n\t/*\n\t * Vendors\n\t * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n\t * You can also import them in vendors to ensure that they are bundled in one file\n\t * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n\t */\n\t/*\n\t * Hot Module Reload\n\t * experimental version\n\t */\n\tif (false) {\n\t    // activate hot module reload\n\t    var ngHmr = require('angular2-hmr');\n\t    ngHmr.hotModuleReplacement(main, module);\n\t}\n\telse {\n\t    // bootstrap when documetn is ready\n\t    document.addEventListener('DOMContentLoaded', function () { return main(); });\n\t}\n\n\n/***/ }\n]);\n\n\n/** WEBPACK FOOTER **\n ** signup-mobile.a8a6bff7d538767dd23b60f246e2197fa05fae2b.prod.bundle.js\n **/","/*\n * Providers provided by Angular\n */\nimport {bootstrap} from '@angular/platform-browser-dynamic';\n/*\n* Platform and Environment\n* our providers/directives/pipes\n*/\nimport {PLATFORM_PROVIDERS_SIGNUP_MOBILE} from './platform/browser';\nimport {ENV_PROVIDERS} from './platform/environment';\n\n/*\n* App Component\n* our top level component that holds all of our components\n*/\nimport {SignupMobileComponent, APP_PROVIDERS} from './signup-mobile';\n\n/*\n * Bootstrap our Angular app with a top level component `App` and inject\n * our Services and Providers into Angular's dependency injection\n */\nexport function main(initialHmrState?: any): Promise<any> {\n\n  return bootstrap(SignupMobileComponent, [\n    ...PLATFORM_PROVIDERS_SIGNUP_MOBILE,\n    ...ENV_PROVIDERS,\n    ...APP_PROVIDERS\n  ])\n    .catch(err => console.error(err));\n\n}\n\n\n\n\n\n/*\n * Vendors\n * For vendors for example jQuery, Lodash, angular2-jwt just import them anywhere in your app\n * You can also import them in vendors to ensure that they are bundled in one file\n * Also see custom-typings.d.ts as you also need to do `typings install x` where `x` is your module\n */\n\n\n/*\n * Hot Module Reload\n * experimental version\n */\nif ('development' === ENV && HMR === true) {\n  // activate hot module reload\n  let ngHmr = require('angular2-hmr');\n  ngHmr.hotModuleReplacement(main, module);\n} else {\n  // bootstrap when documetn is ready\n  document.addEventListener('DOMContentLoaded', () => main());\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/signup-mobile.browser.ts\n **/"],"sourceRoot":""}